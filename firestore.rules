rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Sessions collection
    match /sessions/{sessionId} {
      // Allow read if user is the owner
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;

      // Allow create if user is authenticated and userId matches
      allow create: if isAuthenticated()
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.keys().hasAll(['userId', 'languageId', 'createdAt', 'totalProblems', 'averageWPM', 'averageAccuracy', 'totalTimeSeconds', 'problemResults'])
                    && request.resource.data.userId is string
                    && request.resource.data.languageId is string
                    && request.resource.data.createdAt is timestamp
                    && request.resource.data.totalProblems is int
                    && request.resource.data.averageWPM is int
                    && request.resource.data.averageAccuracy is int
                    && request.resource.data.totalTimeSeconds is int
                    && request.resource.data.problemResults is list;

      // Prevent updates and deletes
      allow update, delete: if false;
    }

    // Future: problems collection (when moved from mock data)
    match /problems/{problemId} {
      // Anyone can read problems
      allow read: if true;

      // Only admins can write (you can add admin check later)
      allow write: if false;
    }
  }
}
